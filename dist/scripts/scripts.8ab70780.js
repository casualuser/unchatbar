angular.module("constants",[]).constant("LOCALSTORAGE",!0),angular.module("unchatbar",["constants","cgNotify","ngStorage"]).run(["broker",function(a){a.connect()}]),angular.module("unchatbar").provider("broker",function(){var a="",b="",c="",d="",e=!1;this.setHost=function(a){b=a},this.setPort=function(a){c=a},this.setPath=function(a){d=a},this.setLocalStroage=function(){e=!0},this.$get=["$q","$rootScope","notify","$localStorage","$sessionStorage",function(f,g,h,i,j){function k(a){function b(){c=setTimeout(b,2e4),a.socket._wsOpen()&&a.socket.send({type:"HEARTBEAT"})}var c=0;return b(),{start:function(){0===c&&b()},stop:function(){clearTimeout(c),c=0}}}function l(){a.on("open",function(a){g.$apply(function(){n.peerId=a,g.$broadcast("peer:open",{id:a})})}),a.on("connection",function(a){g.$apply(function(){m(a)})}),a.on("error",function(a){h({message:a.message,classes:"alert alert-danger",templateUrl:""})})}function m(a){n.connections[a.peer]=!0,o[a.peer]=a,g.$broadcast("peer:clientConnect",{connectId:a.peer,connection:a})}var n=e?i:j,o={};return n=n.$default({broker:{peerId:"",connections:{}}}).broker,{getMapOfClientCalled:function(){return n.connections},removeClientCalled:function(a){return delete n.connections[a]},getMapOfActiveClients:function(){return o},removeClientFromCalledMap:function(a){delete o[a]},connect:function(){a=new Peer(n.peerId,{host:b,port:c,path:d}),l(),k(a)},getPeerId:function(){return a.id||""},connectToClient:function(b){a.id?m(a.connect(b)):h({message:"connect to client failed, no peerId",classes:"alert alert-danger",templateUrl:""})}}}]}),angular.module("unchatbar").config(["brokerProvider","LOCALSTORAGE",function(a,b){b===!0&&a.setLocalStroage(),a.setHost("unchatbar-server.herokuapp.com"),a.setPort(80)}]),angular.module("unchatbar").controller("phoneBook",["$scope","broker",function(a,b){a.clientList=b.getMapOfClientCalled(),a.removeClient=function(c){b.removeClientCalled(c)&&(a.clientList=b.getMapOfClientCalled())},a.connectClient=function(a){b.connectToClient(a)},a.$on("peer:clientConnect",function(){a.clientList=b.getMapOfClientCalled()})}]),angular.module("unchatbar").controller("dialer",["$scope","$rootScope","broker",function(a,b,c){a.peerId=c.getPeerId(),a.connectId="",a.connect=function(){c.connectToClient(a.connectId);a.connectId=""},a.$on("peer:open",function(){a.peerId=c.getPeerId()})}]),angular.module("unchatbar").controller("connection",["$scope","$rootScope","notify",function(a,b,c){function d(){a.isOpen&&c({message:"connect to "+a.connect.peer+" succesfull",classes:"alert alert-success",templateUrl:""})}a.isOpen=a.connect.open?!0:!1,a.message="",a.messageList=[],a.minimize=!1,a.unreadMessageCounter=0,a.send=function(){a.connect.send(a.message),a.messageList.push({own:!0,text:a.message}),a.message=""},a.closeConnection=function(){a.connect.close()},a.toogleMinimize=function(){a.minimize=!a.minimize,a.minimize===!1&&(a.unreadMessageCounter=0)},a.$on("clientConnection:open",function(){a.isOpen=!0,d()}),a.$on("clientConnection:close",function(){c({message:"connect to "+a.connect.peer+" close",classes:"alert alert-info",templateUrl:""}),a.$emit("peer:clientDisconnect",{connectionId:a.connectionIndex}),a.isOpen=!1}),a.$on("clientConnection:data",function(b,c){a.minimize===!0&&a.unreadMessageCounter++,a.messageList.push({own:!1,text:c})}),d()}]),angular.module("unchatbar").controller("connectionCenter",["$scope","broker",function(a,b){a.connections=b.getMapOfActiveClients(),a.$on("peer:clientConnect",function(){a.connections=b.getMapOfActiveClients()}),a.$on("peer:clientDisconnect",function(c,d){b.removeClientFromCalledMap(d.connectionId),a.connections=b.getMapOfActiveClients()})}]),angular.module("unchatbar").directive("dialer",["broker","$rootScope",function(a){return{restrict:"E",templateUrl:"views/peer/dialer.html",controller:"dialer",scope:{autocallFromPhonebook:"="},link:function(b){b.autocallFromPhonebook===!0&&_.forEach(a.getMapOfClientCalled(),function(b,c){a.connectToClient(c)})}}}]),angular.module("unchatbar").directive("connection",["broker","$rootScope",function(a,b){return{restrict:"E",scope:{connect:"=",connectionIndex:"="},templateUrl:"views/peer/connection.html",controller:"connection",link:function(a){a.connect.on("open",function(){b.$apply(function(){a.$broadcast("clientConnection:open")})}),a.connect.on("close",function(){a.$broadcast("clientConnection:close")}),a.connect.on("data",function(c){b.$apply(function(){a.$broadcast("clientConnection:data",c)})})}}}]),angular.module("unchatbar").directive("connectionCenter",["broker",function(){return{restrict:"E",templateUrl:"views/peer/connection-center.html",controller:"connectionCenter"}}]),angular.module("unchatbar").directive("phoneBook",["broker",function(){return{restrict:"E",templateUrl:"views/peer/phone-book.html",controller:"phoneBook"}}]);